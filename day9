import java.io.File;  
import java.io.FileNotFoundException;  
import java.util.Scanner; 
import java.util.ArrayList;

  class Main {
    public static void main(String[] args) {
    smokeBasin("input.txt");
    
    }
  
  public static int low (int [][] nums) {
      int sum = 0;
      ArrayList <Integer> fin = new ArrayList <> ();
      for (int r = 0; r < nums.length; r++) {

        for (int c = 0; c < nums[0].length; c++) {

          if ((r == 0 && c == 0)) {
            int min = Math.min(nums[r][c], nums[r +1][c]);
            min = Math.min(min, nums[r][c + 1]);
            if (min == nums[0][0]) {
              fin.add(min+1);
            }
          } else if((r == 0 && c == nums[0].length-1) ){
            int min = Math.min(nums[r][c], nums[r+1][c]);
            min = Math.min(min, nums[r][c-1]);
            if (min == nums[r][c]) {
              fin.add(min+1);
            }
          } else if(r == nums.length-1 && c == 0){
            int min = Math.min(nums[r][c], nums[r -1][c]);
            min = Math.min(min, nums[r][c+1]);
            if (min == nums[r][c]){
              fin.add(min+1);
            }
          } else if (r == nums.length-1 && c == nums[0].length-1){
           int min = Math.min(nums[r][c], nums[r -1][c]);
            min = Math.min(min, nums[r][c-1]);
            if (min == nums[r][c]){
              fin.add(min+1);
            }
          } else if (r == 0){
            int min = Math.min(nums[r][c], nums[r+1][c]);
            min = Math.min(min, nums[r][c-1]);
            min = Math.min(min, nums[r][c+1]);
            if (min == nums[r][c]) {
              fin.add(min+1);
            }
          } else if (r == nums.length-1) {
            int min = Math.min(nums[r][c], nums[r -1][c]);
            min = Math.min(min, nums[r][c-1]);
            min = Math.min(min, nums[r][c+1]);
            if (min == nums[r][c]){
              fin.add(min+1);
            }
          } else if (c == 0) {
            int min = Math.min(nums[r][c], nums[r][c+1]);
            min = Math.min(min, nums[r-1][c]);
            min = Math.min(min, nums[r+1][c]);
            if (min == nums[r][c]) {
              fin.add(min+1);
            }
          } else if (c == nums[0].length-1) {
            int min = Math.min(nums[r][c], nums[r][c-1]);
            min = Math.min(min, nums[r-1][c]);
            min = Math.min(min, nums[r+1][c]);
            if (min == nums[r][c]) {
              fin.add(min+1);
            }
          } else {
            int min = Math.min(nums[r][c], nums[r][c-1]);
            min = Math.min(min, nums[r][c+1]);
            min = Math.min(min, nums[r+1][c]);
            min = Math.min(min, nums[r-1][c]);
            if (min == nums[r][c]) {
              fin.add(min+1);
            }
          }
        }
      }

      for (int i = 0; i < fin.size(); i++) {
        if (fin.get(i) != 10){
          sum += fin.get(i);
        }
      }  
      System.out.println(sum);
      return sum;
    }

  public static void printMe (int[][] nums) {
		for (int r = 0; r < nums.length; r++) {
			for (int c = 0; c < nums[0].length; c ++) {
			  System.out.print(nums[r][c] + "\t" );
			}
			System.out.println();
		}
	}

  public static int [][] twod (int r, int c, ArrayList <Integer> nums) {
    int [][] data = new int [r][c];
    int count = 0;
    while (count < nums.size()) {
      for (int ro = 0; ro < data.length; ro++) {
        for (int co = 0; co < data[0].length; co ++) {
          int n = nums.get(count);
          data[ro][co] = n;
          count ++;
        }
      }
    }
    return data;
    
  }

public static ArrayList <Integer> importFile(String fileName){
    ArrayList<String> words = new ArrayList<>();
    int count = 0;
    try {
      File myObj = new File(fileName);
      Scanner myReader = new Scanner(myObj);
      
      while (myReader.hasNextLine()) {
        String data = myReader.nextLine();
        count++;
        words.add(data);
      }
      myReader.close();
    } catch (FileNotFoundException e) {
      System.out.println("An error occurred.");
      e.printStackTrace();
    }
    
    ArrayList <Integer> nums = new ArrayList <> ();
    int length = words.get(0).length()-1;
    for (int i = 0; i < count; i++ ) {
      for (int j = 0; j < length; j++) {
        int number = Integer.parseInt(words.get(i).substring(j, j+1));
        nums.add(number);
      }
      int last = Integer.parseInt(words.get(i).substring(length));
      nums.add(last);
    }   
    return nums;
  }


public static void smokeBasin(String fileName) {
		int total = 0;
		int row = 0;
		int col = 0;
		String a = "";
		
		try {
			File myObj = new File(fileName);
			Scanner myReader = new Scanner(myObj);

			while (myReader.hasNextLine()) {
				row++;
				String data = myReader.nextLine();
				a+= data;
			}
			myReader.close();
		} catch (FileNotFoundException e) {
			System.out.println("An error occurred.");
			e.printStackTrace();
		}
		col = a.length()/row;
    low(twod(row, col, importFile(fileName)));
	}
  
}
